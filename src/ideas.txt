Here are my assumptions for the baseline:
- Every person will have 2 mobile devices (I changed it from mobile phones on my branch) and 4 IoT devices. 2 mobile devices - watch, phone. 4 IoT devices - doorbell, lights, amazon echo, security.
- I will run 3 baseline simulations:
 1) 8 IoT, 2 mobile, 2 Enb, 1 Epc  
 2) 40 IoT, 10 mobile, 5 Enb, 1 Epc
 3) 80 IoT, 20 mobile, 5 Enb, 1 Epc
- I will try to look in to Routing Information Protocol (RIP) for the traditional LTE.
- There are separate QoS categories for Mobile devices and IoT.
- For traditional I will make all the QoS equal bandwidth.
- Each message has a random start time where it will send to the Enbs.  Each message will also have a stop time of when it ends at the its target.  I will add 1 second for each additional transmission message for routing (e.g. Enb1 asks Enb2 to find the destination UE2 (1 second) and Enb2 tells Enb1 the destination is here(1 second) = 2 total seconds ).
- We will probably need a class for random generated data (e.g. locations of the UEs ).
- We need to figure out a number for total bandwidth

My procedure (starts out like your):
- Initialized all components
- Connect/Attach components to each other.  Each UE will ask the nearest Enb to join the network.  The Enb will accept. (I am not instantiating an UE with a node)
- run the simulation
1) UEs send messages send to Enb.
2) Enb gets a message and puts the message in a queue.  There are multiple queues sorted by QoS.
3) a)Enb checks routing table and routes to other Enb or UE. b) Enb uses protocol and asks other Enb where the location is.
5) increment time
6) Enb sends location of destination or forwards packet to UE
7) UE receives packet
8) rinse, repeat